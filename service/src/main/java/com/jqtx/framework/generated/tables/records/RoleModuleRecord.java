/*
 * This file is generated by jOOQ.
 */
package com.jqtx.framework.generated.tables.records;


import com.jqtx.framework.generated.tables.RoleModule;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleModuleRecord extends UpdatableRecordImpl<RoleModuleRecord> implements Record3<UInteger, UInteger, UInteger> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>toolkit.role_module.id</code>.
     */
    public RoleModuleRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.role_module.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>toolkit.role_module.role_id</code>.
     */
    public RoleModuleRecord setRoleId(UInteger value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.role_module.role_id</code>.
     */
    public UInteger getRoleId() {
        return (UInteger) get(1);
    }

    /**
     * Setter for <code>toolkit.role_module.module_id</code>.
     */
    public RoleModuleRecord setModuleId(UInteger value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.role_module.module_id</code>.
     */
    public UInteger getModuleId() {
        return (UInteger) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, UInteger, UInteger> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return RoleModule.ROLE_MODULE.ID;
    }

    @Override
    public Field<UInteger> field2() {
        return RoleModule.ROLE_MODULE.ROLE_ID;
    }

    @Override
    public Field<UInteger> field3() {
        return RoleModule.ROLE_MODULE.MODULE_ID;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UInteger component2() {
        return getRoleId();
    }

    @Override
    public UInteger component3() {
        return getModuleId();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UInteger value2() {
        return getRoleId();
    }

    @Override
    public UInteger value3() {
        return getModuleId();
    }

    @Override
    public RoleModuleRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public RoleModuleRecord value2(UInteger value) {
        setRoleId(value);
        return this;
    }

    @Override
    public RoleModuleRecord value3(UInteger value) {
        setModuleId(value);
        return this;
    }

    @Override
    public RoleModuleRecord values(UInteger value1, UInteger value2, UInteger value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleModuleRecord
     */
    public RoleModuleRecord() {
        super(RoleModule.ROLE_MODULE);
    }

    /**
     * Create a detached, initialised RoleModuleRecord
     */
    public RoleModuleRecord(UInteger id, UInteger roleId, UInteger moduleId) {
        super(RoleModule.ROLE_MODULE);

        setId(id);
        setRoleId(roleId);
        setModuleId(moduleId);
    }
}
