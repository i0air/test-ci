/*
 * This file is generated by jOOQ.
 */
package com.jqtx.framework.generated.tables;


import com.jqtx.framework.generated.Keys;
import com.jqtx.framework.generated.Toolkit;
import com.jqtx.framework.generated.tables.records.UserDimensionRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDimension extends TableImpl<UserDimensionRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>toolkit.user_dimension</code>
     */
    public static final UserDimension USER_DIMENSION = new UserDimension();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDimensionRecord> getRecordType() {
        return UserDimensionRecord.class;
    }

    /**
     * The column <code>toolkit.user_dimension.id</code>.
     */
    public final TableField<UserDimensionRecord, UInteger> ID = createField(DSL.name("id"), SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");

    /**
     * The column <code>toolkit.user_dimension.user_id</code>.
     */
    public final TableField<UserDimensionRecord, UInteger> USER_ID = createField(DSL.name("user_id"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>toolkit.user_dimension.dimension_id</code>.
     */
    public final TableField<UserDimensionRecord, UInteger> DIMENSION_ID = createField(DSL.name("dimension_id"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    private UserDimension(Name alias, Table<UserDimensionRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDimension(Name alias, Table<UserDimensionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>toolkit.user_dimension</code> table reference
     */
    public UserDimension(String alias) {
        this(DSL.name(alias), USER_DIMENSION);
    }

    /**
     * Create an aliased <code>toolkit.user_dimension</code> table reference
     */
    public UserDimension(Name alias) {
        this(alias, USER_DIMENSION);
    }

    /**
     * Create a <code>toolkit.user_dimension</code> table reference
     */
    public UserDimension() {
        this(DSL.name("user_dimension"), null);
    }

    public <O extends Record> UserDimension(Table<O> child, ForeignKey<O, UserDimensionRecord> key) {
        super(child, key, USER_DIMENSION);
    }

    @Override
    public Schema getSchema() {
        return Toolkit.TOOLKIT;
    }

    @Override
    public Identity<UserDimensionRecord, UInteger> getIdentity() {
        return (Identity<UserDimensionRecord, UInteger>) super.getIdentity();
    }

    @Override
    public UniqueKey<UserDimensionRecord> getPrimaryKey() {
        return Keys.KEY_USER_DIMENSION_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserDimensionRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDimensionRecord>>asList(Keys.KEY_USER_DIMENSION_PRIMARY);
    }

    @Override
    public UserDimension as(String alias) {
        return new UserDimension(DSL.name(alias), this);
    }

    @Override
    public UserDimension as(Name alias) {
        return new UserDimension(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDimension rename(String name) {
        return new UserDimension(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDimension rename(Name name) {
        return new UserDimension(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, UInteger, UInteger> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
