/*
 * This file is generated by jOOQ.
 */
package com.jqtx.framework.generated.tables.records;


import com.jqtx.framework.generated.tables.Menu;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MenuRecord extends UpdatableRecordImpl<MenuRecord> implements Record12<UInteger, UByte, String, String, String, String, String, UByte, Boolean, UInteger, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>toolkit.menu.id</code>. 主键ID
     */
    public MenuRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.id</code>. 主键ID
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>toolkit.menu.type</code>. 类型：0-menu, 1-folder, 2-button
     */
    public MenuRecord setType(UByte value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.type</code>. 类型：0-menu, 1-folder, 2-button
     */
    public UByte getType() {
        return (UByte) get(1);
    }

    /**
     * Setter for <code>toolkit.menu.parent_name</code>. 父级名称
     */
    public MenuRecord setParentName(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.parent_name</code>. 父级名称
     */
    public String getParentName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>toolkit.menu.name</code>. 名称
     */
    public MenuRecord setName(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.name</code>. 名称
     */
    public String getName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>toolkit.menu.path</code>. 路由/行为码
     */
    public MenuRecord setPath(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.path</code>. 路由/行为码
     */
    public String getPath() {
        return (String) get(4);
    }

    /**
     * Setter for <code>toolkit.menu.redirect</code>. 动态跳转地址
     */
    public MenuRecord setRedirect(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.redirect</code>. 动态跳转地址
     */
    public String getRedirect() {
        return (String) get(5);
    }

    /**
     * Setter for <code>toolkit.menu.meta</code>. 页面/按钮标题
{
  "title": "页面/按钮标题",
  "icon": "图标",
  "url": "外链地址",
  "is_external_link": false
}
     */
    public MenuRecord setMeta(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.meta</code>. 页面/按钮标题
{
  "title": "页面/按钮标题",
  "icon": "图标",
  "url": "外链地址",
  "is_external_link": false
}
     */
    public String getMeta() {
        return (String) get(6);
    }

    /**
     * Setter for <code>toolkit.menu.no_auth_behavior</code>. 无权限行为，0-隐藏，1-禁用，2-提示
     */
    public MenuRecord setNoAuthBehavior(UByte value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.no_auth_behavior</code>. 无权限行为，0-隐藏，1-禁用，2-提示
     */
    public UByte getNoAuthBehavior() {
        return (UByte) get(7);
    }

    /**
     * Setter for <code>toolkit.menu.is_enabled</code>. 是否启用，0-禁用，1-启用
     */
    public MenuRecord setIsEnabled(Boolean value) {
        set(8, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.is_enabled</code>. 是否启用，0-禁用，1-启用
     */
    public Boolean getIsEnabled() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>toolkit.menu.sort_id</code>. 菜单排序
     */
    public MenuRecord setSortId(UInteger value) {
        set(9, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.sort_id</code>. 菜单排序
     */
    public UInteger getSortId() {
        return (UInteger) get(9);
    }

    /**
     * Setter for <code>toolkit.menu.create_time</code>. 创建时间，默认当前
     */
    public MenuRecord setCreateTime(LocalDateTime value) {
        set(10, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.create_time</code>. 创建时间，默认当前
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>toolkit.menu.update_time</code>. 更新时间
     */
    public MenuRecord setUpdateTime(LocalDateTime value) {
        set(11, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<UInteger, UByte, String, String, String, String, String, UByte, Boolean, UInteger, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<UInteger, UByte, String, String, String, String, String, UByte, Boolean, UInteger, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Menu.MENU.ID;
    }

    @Override
    public Field<UByte> field2() {
        return Menu.MENU.TYPE;
    }

    @Override
    public Field<String> field3() {
        return Menu.MENU.PARENT_NAME;
    }

    @Override
    public Field<String> field4() {
        return Menu.MENU.NAME;
    }

    @Override
    public Field<String> field5() {
        return Menu.MENU.PATH;
    }

    @Override
    public Field<String> field6() {
        return Menu.MENU.REDIRECT;
    }

    @Override
    public Field<String> field7() {
        return Menu.MENU.META;
    }

    @Override
    public Field<UByte> field8() {
        return Menu.MENU.NO_AUTH_BEHAVIOR;
    }

    @Override
    public Field<Boolean> field9() {
        return Menu.MENU.IS_ENABLED;
    }

    @Override
    public Field<UInteger> field10() {
        return Menu.MENU.SORT_ID;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Menu.MENU.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Menu.MENU.UPDATE_TIME;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public UByte component2() {
        return getType();
    }

    @Override
    public String component3() {
        return getParentName();
    }

    @Override
    public String component4() {
        return getName();
    }

    @Override
    public String component5() {
        return getPath();
    }

    @Override
    public String component6() {
        return getRedirect();
    }

    @Override
    public String component7() {
        return getMeta();
    }

    @Override
    public UByte component8() {
        return getNoAuthBehavior();
    }

    @Override
    public Boolean component9() {
        return getIsEnabled();
    }

    @Override
    public UInteger component10() {
        return getSortId();
    }

    @Override
    public LocalDateTime component11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component12() {
        return getUpdateTime();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public UByte value2() {
        return getType();
    }

    @Override
    public String value3() {
        return getParentName();
    }

    @Override
    public String value4() {
        return getName();
    }

    @Override
    public String value5() {
        return getPath();
    }

    @Override
    public String value6() {
        return getRedirect();
    }

    @Override
    public String value7() {
        return getMeta();
    }

    @Override
    public UByte value8() {
        return getNoAuthBehavior();
    }

    @Override
    public Boolean value9() {
        return getIsEnabled();
    }

    @Override
    public UInteger value10() {
        return getSortId();
    }

    @Override
    public LocalDateTime value11() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value12() {
        return getUpdateTime();
    }

    @Override
    public MenuRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public MenuRecord value2(UByte value) {
        setType(value);
        return this;
    }

    @Override
    public MenuRecord value3(String value) {
        setParentName(value);
        return this;
    }

    @Override
    public MenuRecord value4(String value) {
        setName(value);
        return this;
    }

    @Override
    public MenuRecord value5(String value) {
        setPath(value);
        return this;
    }

    @Override
    public MenuRecord value6(String value) {
        setRedirect(value);
        return this;
    }

    @Override
    public MenuRecord value7(String value) {
        setMeta(value);
        return this;
    }

    @Override
    public MenuRecord value8(UByte value) {
        setNoAuthBehavior(value);
        return this;
    }

    @Override
    public MenuRecord value9(Boolean value) {
        setIsEnabled(value);
        return this;
    }

    @Override
    public MenuRecord value10(UInteger value) {
        setSortId(value);
        return this;
    }

    @Override
    public MenuRecord value11(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MenuRecord value12(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public MenuRecord values(UInteger value1, UByte value2, String value3, String value4, String value5, String value6, String value7, UByte value8, Boolean value9, UInteger value10, LocalDateTime value11, LocalDateTime value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MenuRecord
     */
    public MenuRecord() {
        super(Menu.MENU);
    }

    /**
     * Create a detached, initialised MenuRecord
     */
    public MenuRecord(UInteger id, UByte type, String parentName, String name, String path, String redirect, String meta, UByte noAuthBehavior, Boolean isEnabled, UInteger sortId, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Menu.MENU);

        setId(id);
        setType(type);
        setParentName(parentName);
        setName(name);
        setPath(path);
        setRedirect(redirect);
        setMeta(meta);
        setNoAuthBehavior(noAuthBehavior);
        setIsEnabled(isEnabled);
        setSortId(sortId);
        setCreateTime(createTime);
        setUpdateTime(updateTime);
    }
}
