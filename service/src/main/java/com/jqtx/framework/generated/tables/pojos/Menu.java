/*
 * This file is generated by jOOQ.
 */
package com.jqtx.framework.generated.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;

import org.jooq.types.UByte;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Menu implements Serializable {

    private static final long serialVersionUID = 1L;

    private UInteger      id;
    private UByte         type;
    private String        parentName;
    private String        name;
    private String        path;
    private String        redirect;
    private String        meta;
    private UByte         noAuthBehavior;
    private Boolean       isEnabled;
    private UInteger      sortId;
    private LocalDateTime createTime;
    private LocalDateTime updateTime;

    public Menu() {}

    public Menu(Menu value) {
        this.id = value.id;
        this.type = value.type;
        this.parentName = value.parentName;
        this.name = value.name;
        this.path = value.path;
        this.redirect = value.redirect;
        this.meta = value.meta;
        this.noAuthBehavior = value.noAuthBehavior;
        this.isEnabled = value.isEnabled;
        this.sortId = value.sortId;
        this.createTime = value.createTime;
        this.updateTime = value.updateTime;
    }

    public Menu(
        UInteger      id,
        UByte         type,
        String        parentName,
        String        name,
        String        path,
        String        redirect,
        String        meta,
        UByte         noAuthBehavior,
        Boolean       isEnabled,
        UInteger      sortId,
        LocalDateTime createTime,
        LocalDateTime updateTime
    ) {
        this.id = id;
        this.type = type;
        this.parentName = parentName;
        this.name = name;
        this.path = path;
        this.redirect = redirect;
        this.meta = meta;
        this.noAuthBehavior = noAuthBehavior;
        this.isEnabled = isEnabled;
        this.sortId = sortId;
        this.createTime = createTime;
        this.updateTime = updateTime;
    }

    /**
     * Getter for <code>toolkit.menu.id</code>. 主键ID
     */
    public UInteger getId() {
        return this.id;
    }

    /**
     * Setter for <code>toolkit.menu.id</code>. 主键ID
     */
    public Menu setId(UInteger id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.type</code>. 类型：0-menu, 1-folder, 2-button
     */
    public UByte getType() {
        return this.type;
    }

    /**
     * Setter for <code>toolkit.menu.type</code>. 类型：0-menu, 1-folder, 2-button
     */
    public Menu setType(UByte type) {
        this.type = type;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.parent_name</code>. 父级名称
     */
    public String getParentName() {
        return this.parentName;
    }

    /**
     * Setter for <code>toolkit.menu.parent_name</code>. 父级名称
     */
    public Menu setParentName(String parentName) {
        this.parentName = parentName;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.name</code>. 名称
     */
    public String getName() {
        return this.name;
    }

    /**
     * Setter for <code>toolkit.menu.name</code>. 名称
     */
    public Menu setName(String name) {
        this.name = name;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.path</code>. 路由/行为码
     */
    public String getPath() {
        return this.path;
    }

    /**
     * Setter for <code>toolkit.menu.path</code>. 路由/行为码
     */
    public Menu setPath(String path) {
        this.path = path;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.redirect</code>. 动态跳转地址
     */
    public String getRedirect() {
        return this.redirect;
    }

    /**
     * Setter for <code>toolkit.menu.redirect</code>. 动态跳转地址
     */
    public Menu setRedirect(String redirect) {
        this.redirect = redirect;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.meta</code>. 页面/按钮标题
{
  "title": "页面/按钮标题",
  "icon": "图标",
  "url": "外链地址",
  "is_external_link": false
}
     */
    public String getMeta() {
        return this.meta;
    }

    /**
     * Setter for <code>toolkit.menu.meta</code>. 页面/按钮标题
{
  "title": "页面/按钮标题",
  "icon": "图标",
  "url": "外链地址",
  "is_external_link": false
}
     */
    public Menu setMeta(String meta) {
        this.meta = meta;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.no_auth_behavior</code>. 无权限行为，0-隐藏，1-禁用，2-提示
     */
    public UByte getNoAuthBehavior() {
        return this.noAuthBehavior;
    }

    /**
     * Setter for <code>toolkit.menu.no_auth_behavior</code>. 无权限行为，0-隐藏，1-禁用，2-提示
     */
    public Menu setNoAuthBehavior(UByte noAuthBehavior) {
        this.noAuthBehavior = noAuthBehavior;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.is_enabled</code>. 是否启用，0-禁用，1-启用
     */
    public Boolean getIsEnabled() {
        return this.isEnabled;
    }

    /**
     * Setter for <code>toolkit.menu.is_enabled</code>. 是否启用，0-禁用，1-启用
     */
    public Menu setIsEnabled(Boolean isEnabled) {
        this.isEnabled = isEnabled;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.sort_id</code>. 菜单排序
     */
    public UInteger getSortId() {
        return this.sortId;
    }

    /**
     * Setter for <code>toolkit.menu.sort_id</code>. 菜单排序
     */
    public Menu setSortId(UInteger sortId) {
        this.sortId = sortId;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.create_time</code>. 创建时间，默认当前
     */
    public LocalDateTime getCreateTime() {
        return this.createTime;
    }

    /**
     * Setter for <code>toolkit.menu.create_time</code>. 创建时间，默认当前
     */
    public Menu setCreateTime(LocalDateTime createTime) {
        this.createTime = createTime;
        return this;
    }

    /**
     * Getter for <code>toolkit.menu.update_time</code>. 更新时间
     */
    public LocalDateTime getUpdateTime() {
        return this.updateTime;
    }

    /**
     * Setter for <code>toolkit.menu.update_time</code>. 更新时间
     */
    public Menu setUpdateTime(LocalDateTime updateTime) {
        this.updateTime = updateTime;
        return this;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Menu (");

        sb.append(id);
        sb.append(", ").append(type);
        sb.append(", ").append(parentName);
        sb.append(", ").append(name);
        sb.append(", ").append(path);
        sb.append(", ").append(redirect);
        sb.append(", ").append(meta);
        sb.append(", ").append(noAuthBehavior);
        sb.append(", ").append(isEnabled);
        sb.append(", ").append(sortId);
        sb.append(", ").append(createTime);
        sb.append(", ").append(updateTime);

        sb.append(")");
        return sb.toString();
    }
}
