/*
 * This file is generated by jOOQ.
 */
package com.jqtx.framework.generated.tables.records;


import com.jqtx.framework.generated.tables.Dimension;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DimensionRecord extends UpdatableRecordImpl<DimensionRecord> implements Record3<UInteger, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>toolkit.dimension.id</code>.
     */
    public DimensionRecord setId(UInteger value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.dimension.id</code>.
     */
    public UInteger getId() {
        return (UInteger) get(0);
    }

    /**
     * Setter for <code>toolkit.dimension.region_code</code>.
     */
    public DimensionRecord setRegionCode(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.dimension.region_code</code>.
     */
    public String getRegionCode() {
        return (String) get(1);
    }

    /**
     * Setter for <code>toolkit.dimension.dept_code</code>.
     */
    public DimensionRecord setDeptCode(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>toolkit.dimension.dept_code</code>.
     */
    public String getDeptCode() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UInteger> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<UInteger, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<UInteger> field1() {
        return Dimension.DIMENSION.ID;
    }

    @Override
    public Field<String> field2() {
        return Dimension.DIMENSION.REGION_CODE;
    }

    @Override
    public Field<String> field3() {
        return Dimension.DIMENSION.DEPT_CODE;
    }

    @Override
    public UInteger component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getRegionCode();
    }

    @Override
    public String component3() {
        return getDeptCode();
    }

    @Override
    public UInteger value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getRegionCode();
    }

    @Override
    public String value3() {
        return getDeptCode();
    }

    @Override
    public DimensionRecord value1(UInteger value) {
        setId(value);
        return this;
    }

    @Override
    public DimensionRecord value2(String value) {
        setRegionCode(value);
        return this;
    }

    @Override
    public DimensionRecord value3(String value) {
        setDeptCode(value);
        return this;
    }

    @Override
    public DimensionRecord values(UInteger value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DimensionRecord
     */
    public DimensionRecord() {
        super(Dimension.DIMENSION);
    }

    /**
     * Create a detached, initialised DimensionRecord
     */
    public DimensionRecord(UInteger id, String regionCode, String deptCode) {
        super(Dimension.DIMENSION);

        setId(id);
        setRegionCode(regionCode);
        setDeptCode(deptCode);
    }
}
